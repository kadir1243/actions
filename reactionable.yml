repositories:
  neoforged/dummy-testing-pr-publishing:
    labelHandlers:
      support:
        type: lock
        lock: true
        close: true
        message: |
          hi?  
          No support questions.
    backport:
      preApplyGenCommands:
        - ./gradlew :neoforge:setup
        - git add -f projects/neoforge/src/main/java/
        - git config user.name "Temp"
        - git config user.email "example@example.com"
        - git commit -m '"Add vanilla sources"' --quiet
      postApplyGenCommands:
        - ./gradlew :neoforge:setup
      preApplyCommands:
        - ./gradlew :neoforge:setup
        - git add -f projects/neoforge/src/main/java/
      postApplyCommands:
        - ./gradlew :neoforge:genPatches
        - rm -rf projects/neoforge/src/main/java/
      diffPattern: '!patches/'
  neoforged/mdk:
    labelHandlers:
      merge me now:
        type: merge
        method: SQUASH

  neoforged/neoforge:
    baseRunCommand: ./gradlew :neoforge:setup
    backport:
      preApplyGenCommands:
        - git config user.name "Temp"
        - git config user.email "example@example.com"

        # Because we can't really backport patches we instead backport the actual changes they cause
        - if: pr.changedFiles.some(file => file.endsWith(".patch"))
          # Prepare base sources then add and commit vanilla sources so we can diff them
          then: |
            ./gradlew :neoforge:setup
            git add -f projects/neoforge/src/main/java/
        
        # Move client files to the main sourceset and back when we backport from a version with split sources to a version without
        - if: (pr.base == '1.21.x' || semver.satisfies(pr.base, '>1.21.4')) && semver.satisfies(target, '<=1.21.4')
          then: |
            ?mv src/client/java/net/neoforged/neoforge/client src/main/java/net/neoforged/neoforge/client
            ?git add src/main/java/net/neoforged/neoforge/client/ src/client/java/net/neoforged/neoforge/client/
            ?mv src/main/java/net/neoforged/neoforge/client src/client/java/net/neoforged/neoforge/client

            ?rsync -av projects/neoforge/src/client/java/ projects/neoforge/src/main/java/
            ?git add -f projects/neoforge/src/main/java/
            ?mv projects/neoforge/src/main/java/net/minecraft/client projects/neoforge/src/client/java/net/minecraft/client
            ?mv projects/neoforge/src/main/java/net/minecraft/realms projects/neoforge/src/client/java/net/minecraft/realms
            ?mv projects/neoforge/src/main/java/com/mojang/blaze3d projects/neoforge/src/client/java/com/mojang/blaze3d
            ?mv projects/neoforge/src/main/java/com/mojang/realmsclient projects/neoforge/src/client/java/com/mojang/realmsclient
          else: |
            ?git add -f projects/neoforge/src/client/java/
        - git commit --allow-empty -m '"Add vanilla sources and move client sources"' --quiet
      postApplyGenCommands:
        # Apply patches from PR if needed
        - if: pr.changedFiles.some(file => file.endsWith(".patch"))
          then: ./gradlew :neoforge:setup
          
        # Move client files when we backport from a version with split sources to a version without
        - if: (pr.base == '1.21.x' || semver.satisfies(pr.base, '>1.21.4')) && semver.satisfies(target, '<=1.21.4')
          then: |
            ?mv src/client/java/net/neoforged/neoforge/client src/main/java/net/neoforged/neoforge/client
            ?rsync -av projects/neoforge/src/client/java/ projects/neoforge/src/main/java/
      preApplyCommands:
        - if: pr.changedFiles.some(file => file.endsWith(".patch"))
          # Prepare base sources then force git to track the vanilla sources so the diff generated from the PR will be applied
          then: |
            ./gradlew :neoforge:setup
            git add -f projects/neoforge/src/main/java/
        - if: pr.changedFiles.some(file => file.endsWith(".patch")) && semver.satisfies(target, '>1.21.4')
          then: git add -f projects/neoforge/src/client/java/
      postApplyCommands:
        - if: pr.changedFiles.some(file => file.endsWith(".patch"))
          then: |
            ./gradlew :neoforge:genPatches
            rm -rf projects/neoforge/src/main/java/ projects/neoforge/src/client/java/
      diffPattern: '!patches/'
    labelHandlers:
      support:
        type: lock
        lock: true
        close: true
        message: |
          :wave: We use the issue tracker exclusively for final bug reports and feature requests.  
          However, this issue appears to be better suited for the [NeoForge Discord](https://discord.neoforged.net).  
          Please ask in the `#user-support` channel in the Discord server, and the conversation can continue there.
      keep rebased:
        type: keep-rebased
      awaiting community agreement:
        type: block
      "backport to (?<ver>[\\d\\.]+)":
        regex: true
        type: backport
        version: ${ver}

prActions:
  repository: neoforged/practionrunner
  workflow: run_pr.yml@main
commands:
  prefixes:
    - "@neoforged/bots "
    - "/"
  reactToComment: true
  minimizeComment: true
